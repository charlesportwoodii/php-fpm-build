---
kind: pipeline
type: docker
name: default

environment:
  DEFAULT_VERSION: 7.4.6
  DEFAULT_REVISION: 1

steps:
  - name: preflight
    image: python:3-alpine
    commands:
      - pip3 install semver
      - python3 genenv
      - echo $(uname -s):$(uname -r):$(uname -v):$(uname -m)
      - mkdir -p build/deb
      - mkdir -p build/alpine
      - mkdir -p build/rpm
  - name: focal
    image: charlesportwoodii/ubuntu:20.04-build
    depends_on:
      - preflight
    environment:
      BUILD_IMAGE: focal
      BUILD_OS: Ubuntu
      BUILD_OS_VERSION: "20.04"
      EXTRA_APT_PACKAGES: "bison libbison-dev"
    commands:
      - bash -lc "make build fpm_debian"
      - mkdir -p build/deb/$BUILD_IMAGE
      - mv *$BUILD_IMAGE*.deb build/deb/$BUILD_IMAGE/
  - name: bionic
    image: charlesportwoodii/ubuntu:18.04-build
    depends_on:
      - preflight
    environment:
      BUILD_IMAGE: bionic
      BUILD_OS: Ubuntu
      BUILD_OS_VERSION: "18.04"
      EXTRA_APT_PACKAGES: "bison libbison-dev"
    commands:
      - bash -lc "make build fpm_debian "
      - mkdir -p build/deb/$BUILD_IMAGE
      - mv *$BUILD_IMAGE*.deb build/deb/$BUILD_IMAGE/
  - name: xenial
    image: charlesportwoodii/ubuntu:16.04-build
    depends_on:
      - preflight
    environment:
      BUILD_IMAGE: xenial
      BUILD_OS: Ubuntu
      BUILD_OS_VERSION: "16.04"
      EXTRA_DEB_PACKAGES: "http://security.ubuntu.com/ubuntu/pool/universe/libz/libzip/libzip4_1.1.2-1.1_amd64.deb http://launchpadlibrarian.net/260671105/libzip-dev_1.1.2-1.1_amd64.deb"
      EXTRA_APT_PACKAGES: "bison libbison-dev"
    commands:
      - bash -lc "make build fpm_debian "
      - mkdir -p build/deb/$BUILD_IMAGE
      - mv *$BUILD_IMAGE*.deb build/deb/$BUILD_IMAGE/
  - name: centos7
    image: charlesportwoodii/centos:7-build
    depends_on:
      - preflight
    environment:
      BUILD_IMAGE: centos7
      BUILD_OS: CentOS
      BUILD_OS_VERSION: "7"
      EXTRA_RPM_PACKAGES: "https://mirror.pit.teraswitch.com/remi/enterprise/7/safe/x86_64/libzip5-1.7.1-1.el7.remi.x86_64.rpm https://mirror.pit.teraswitch.com/remi/enterprise/7/remi/x86_64/libzip5-devel-1.7.1-1.el7.remi.x86_64.rpm"
      REMOVE_RPM_PACKAGES: "libzip libzip-devel"
    commands:
      - bash -lc "make build fpm_rpm"
      - mkdir -p build/rpm/$BUILD_OS/$BUILD_OS_VERSION/x86_64
      - mv *.rpm build/rpm/$BUILD_OS/$BUILD_OS_VERSION/x86_64
  - name: rhel7
    image: charlesportwoodii/rhel:7-build
    depends_on:
      - preflight
    environment:
      BUILD_IMAGE: rhel7
      BUILD_OS: RHEL
      BUILD_OS_VERSION: "7"
      EXTRA_RPM_PACKAGES: "https://mirror.pit.teraswitch.com/remi/enterprise/7/safe/x86_64/libzip5-1.7.1-1.el7.remi.x86_64.rpm https://mirror.pit.teraswitch.com/remi/enterprise/7/remi/x86_64/libzip5-devel-1.7.1-1.el7.remi.x86_64.rpm"
      REMOVE_RPM_PACKAGES: "libzip libzip-devel"
    commands:
      - bash -lc "make build fpm_rpm"
      - mkdir -p build/rpm/$BUILD_OS/$BUILD_OS_VERSION/x86_64
      - mv *.rpm build/rpm/$BUILD_OS/$BUILD_OS_VERSION/x86_64
  - name: "alpine3.9"
    image: charlesportwoodii/alpine:3.9-build
    depends_on:
      - preflight
    environment:
      BUILD_IMAGE: "alpine3.9"
      BUILD_OS: Alpine
      BUILD_OS_VERSION: "3.9"
      ALPINE_VERSION: "3090"
    commands:
      - bash -lc "apk add --no-cache linux-headers; make build fpm_alpine"
      - mkdir -p build/alpine/v$BUILD_OS_VERSION/main/x86_64
      - mv *.apk build/alpine/v$BUILD_OS_VERSION/main/x86_64
  - name: "alpine3.10"
    image: charlesportwoodii/alpine:3.10-build
    depends_on:
      - preflight
    environment:
      BUILD_IMAGE: "alpine3.10"
      BUILD_OS: Alpine
      BUILD_OS_VERSION: "3.10"
      ALPINE_VERSION: "3100"
    commands:
      - bash -lc "apk add --no-cache linux-headers; make build fpm_alpine"
      - mkdir -p build/alpine/v$BUILD_OS_VERSION/main/x86_64
      - mv *.apk build/alpine/v$BUILD_OS_VERSION/main/x86_64
  - name: "alpine3.11"
    image: charlesportwoodii/alpine:3.11-build
    depends_on:
      - preflight
    environment:
      BUILD_IMAGE: "alpine3.11"
      BUILD_OS: Alpine
      BUILD_OS_VERSION: "3.11"
      ALPINE_VERSION: "3110"
    commands:
      - bash -lc "apk add --no-cache linux-headers; make build fpm_alpine"
      - mkdir -p build/alpine/v$BUILD_OS_VERSION/main/x86_64
      - mv *.apk build/alpine/v$BUILD_OS_VERSION/main/x86_64
  - name: deploy
    image: plugins/s3-sync
    when:
      event:
        - tag
    depends_on:
      - focal
      - bionic
      - xenial
      - centos7
      - rhel7
      - "alpine3.9"
      - "alpine3.10"
      - "alpine3.11"
    settings:
      bucket:
        from_secret: AWS_BUCKET
      endpoint:
        from_secret: AWS_HOST
      access_key:
        from_secret: AWS_ACCESS_KEY_ID
      secret_key:
        from_secret: AWS_SECRET_ACCESS_KEY
      source: build/
      path_style: true
      target: /
      delete: false
      acl:
        "*": public-read
  - name: update-apt-packages
    depends_on:
      - deploy
    when:
      event:
        - tag
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: SSH_HOST
      username:
        from_secret: SSH_USERNAME
      key:
        from_secret: SSH_KEY
      port: 22
      script:
        - /usr/local/bin/update-apt-packages
  - name: update-rpm-packages
    depends_on:
      - deploy
    when:
      event:
        - tag
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: SSH_HOST
      username:
        from_secret: SSH_USERNAME
      key:
        from_secret: SSH_KEY
      port: 22
      script:
        - /usr/local/bin/update-rpm-packages
  - name: update-alpine-packages
    depends_on:
      - deploy
    when:
      event:
        - tag
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: SSH_HOST
      username:
        from_secret: SSH_USERNAME
      key:
        from_secret: SSH_KEY
      port: 22
      script:
        - /usr/local/bin/update-alpine-packages
  - name: matrix_notify
    image: plugins/matrix
    depends_on:
      - focal
      - bionic
      - xenial
      - centos7
      - rhel7
      - "alpine3.9"
      - "alpine3.10"
      - "alpine3.11"
    settings:
      homeserver: https://matrix.erianna.com
      roomid:
        from_secret: MATRIX_ROOM_ID
      username:
        from_secret: MATRIX_USER
      password:
        from_secret: MATRIX_PASSWORD
  - name: matrix_notify_deploy
    image: plugins/matrix
    depends_on:
      - deploy
    when:
      event:
        - tag
    settings:
      homeserver: https://matrix.erianna.com
      roomid:
        from_secret: MATRIX_ROOM_ID
      username:
        from_secret: MATRIX_USER
      password:
        from_secret: MATRIX_PASSWORD
      template: "PHP packages have been uploaded to S3"
  - name: docker
    depends_on:
      - "alpine3.11"
      - "deploy"
      - "update-alpine-packages"
    when:
      event:
        - tag
    image: docker
    environment:
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
    commands:
      - docker build -f Dockerfile.php$(tail -n1 .envs | sed "s/SHORT_VERSION=//") $(for i in $(cat .envs); do echo -n "--build-arg $i "; done) -t charlesportwoodii/php:$(head -n1 .envs | sed "s/VERSION=//") -t charlesportwoodii/phpf:$(tail -n1 .envs | sed "s/SHORT_VERSION=//") --no-cache --compress --squash .
      - docker login -u=$username -p=$password
      - docker push charlesportwoodii/php:$(head -n1 .envs | sed "s/VERSION=//")
      - docker push charlesportwoodii/php:$(tail -n1 .envs | sed "s/SHORT_VERSION=//")
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock
