---
kind: pipeline
type: docker
name: build-amd64

platform:
  arch: amd64

environment:
  DEFAULT_VERSION: 8.0.9
  DEFAULT_REVISION: 1

steps:
  - name: preflight
    image: python:3-alpine
    commands:
      - pip3 install semver
      - python3 genenv
      - echo $(uname -s):$(uname -r):$(uname -v):$(uname -m)
      - mkdir -p build/deb
      - mkdir -p build/alpine
      - mkdir -p build/rpm
  - name: focal
    image: charlesportwoodii/ubuntu:20.04-build
    depends_on:
      - preflight
    environment:
      BUILD_IMAGE: focal
      BUILD_OS: Ubuntu
      BUILD_OS_VERSION: "20.04"
      EXTRA_APT_PACKAGES: "bison libbison-dev libffi-dev"
    commands:
      - bash -lc "make build fpm_debian"
      - mkdir -p build/deb/$BUILD_IMAGE
      - mv *$BUILD_IMAGE*.deb build/deb/$BUILD_IMAGE/
    when:
      ref:
        exclude:
          - refs/tags/7.3**
          - refs/tags/7.2**
  - name: bionic
    image: charlesportwoodii/ubuntu:18.04-build
    depends_on:
      - preflight
    environment:
      BUILD_IMAGE: bionic
      BUILD_OS: Ubuntu
      BUILD_OS_VERSION: "18.04"
      EXTRA_APT_PACKAGES: "bison libbison-dev libffi-dev"
    commands:
      - bash -lc "make build fpm_debian "
      - mkdir -p build/deb/$BUILD_IMAGE
      - mv *$BUILD_IMAGE*.deb build/deb/$BUILD_IMAGE/
  - name: "alpine3.11"
    image: charlesportwoodii/alpine:3.11-build
    depends_on:
      - preflight
    environment:
      BUILD_IMAGE: "alpine3.11"
      BUILD_OS: Alpine
      BUILD_OS_VERSION: "3.11"
      ALPINE_VERSION: "3110"
    commands:
      - bash -lc "apk add --no-cache linux-headers libffi-dev; make build fpm_alpine"
      - mkdir -p build/alpine/v$BUILD_OS_VERSION/main/x86_64
      - mv *.apk build/alpine/v$BUILD_OS_VERSION/main/x86_64
  - name: "alpine3.14"
    image: charlesportwoodii/alpine:3.14-build
    depends_on:
      - preflight
    when:
      ref:
        exclude:
          - refs/tags/7.4**
    environment:
      BUILD_IMAGE: "alpine3.14"
      BUILD_OS: Alpine
      BUILD_OS_VERSION: "3.14"
      ALPINE_VERSION: "3140"
    commands:
      - bash -lc "apk add --no-cache linux-headers libffi-dev; make build fpm_alpine"
      - mkdir -p build/alpine/v$BUILD_OS_VERSION/main/x86_64
      - mv *.apk build/alpine/v$BUILD_OS_VERSION/main/x86_64
  - name: deploy
    image: amazon/aws-cli
    when:
      event:
        - tag
    depends_on:
      - focal
      - "alpine3.11"
      - "alpine3.14"
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: AWS_SECRET_ACCESS_KEY
      BUCKET:
        from_secret: AWS_BUCKET
    commands:
      - aws s3 --endpoint-url=https://nyc3.digitaloceanspaces.com cp ./build/ s3://$BUCKET --recursive
  - name: update-apt-packages
    depends_on:
      - deploy
    when:
      event:
        - tag
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: SSH_HOST
      username:
        from_secret: SSH_USERNAME
      key:
        from_secret: SSH_KEY
      port: 22
      script:
        - /usr/local/bin/update-apt-packages
  - name: update-alpine-packages
    depends_on:
      - deploy
    when:
      event:
        - tag
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: SSH_HOST
      username:
        from_secret: SSH_USERNAME
      key:
        from_secret: SSH_KEY
      port: 22
      script:
        - /usr/local/bin/update-alpine-packages x86_64

---
kind: pipeline
type: docker
name: build-arm64

platform:
  arch: arm64

environment:
  DEFAULT_VERSION: 8.0.9
  DEFAULT_REVISION: 1

steps:
  - name: preflight
    image: python:3-alpine
    commands:
      - pip3 install semver
      - python3 genenv
      - echo $(uname -s):$(uname -r):$(uname -v):$(uname -m)
      - mkdir -p build/deb
      - mkdir -p build/alpine
      - mkdir -p build/rpm
  - name: "alpine3.11"
    image: charlesportwoodii/alpine:3.11-build
    depends_on:
      - preflight
    when:
      ref:
        exclude:
          - refs/tags/7.3**
    environment:
      BUILD_IMAGE: "alpine3.11"
      BUILD_OS: Alpine
      BUILD_OS_VERSION: "3.11"
      ALPINE_VERSION: "3110"
    commands:
      - bash -lc "apk add --no-cache linux-headers libffi-dev; make build fpm_alpine"
      - mkdir -p build/alpine/v$BUILD_OS_VERSION/main/aarch64
      - mv *.apk build/alpine/v$BUILD_OS_VERSION/main/aarch64
  - name: "alpine3.14"
    image: charlesportwoodii/alpine:3.14-build
    depends_on:
      - preflight
    when:
      ref:
        exclude:
          - refs/tags/7.4**
          - refs/tags/7.3**
    environment:
      BUILD_IMAGE: "alpine3.14"
      BUILD_OS: Alpine
      BUILD_OS_VERSION: "3.14"
      ALPINE_VERSION: "3140"
    commands:
      - bash -lc "apk add --no-cache linux-headers libffi-dev; make build fpm_alpine"
      - mkdir -p build/alpine/v$BUILD_OS_VERSION/main/aarch64
      - mv *.apk build/alpine/v$BUILD_OS_VERSION/main/aarch64
  - name: deploy-alpine3.11
    image: amazon/aws-cli
    when:
      event:
        - tag
    depends_on:
      - "alpine3.11"
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: AWS_SECRET_ACCESS_KEY
      BUCKET:
        from_secret: AWS_BUCKET
    commands:
      - aws s3 --endpoint-url=https://nyc3.digitaloceanspaces.com cp ./build/ s3://$BUCKET --recursive
  - name: deploy
    image: amazon/aws-cli
    when:
      event:
        - tag
    depends_on:
      - "alpine3.14"
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY:
        from_secret: AWS_SECRET_ACCESS_KEY
      BUCKET:
        from_secret: AWS_BUCKET
    commands:
      - aws s3 --endpoint-url=https://nyc3.digitaloceanspaces.com cp ./build/ s3://$BUCKET --recursive
  - name: update-alpine-packages
    depends_on:
      - deploy
    when:
      event:
        - tag
    image: appleboy/drone-ssh
    settings:
      host:
        from_secret: SSH_HOST
      username:
        from_secret: SSH_USERNAME
      key:
        from_secret: SSH_KEY
      port: 22
      script:
        - /usr/local/bin/update-alpine-packages aarch64

---
kind: pipeline
type: docker
name: docker-amd64

platform:
  arch: amd64

depends_on:
  - build-amd64

environment:
  DEFAULT_VERSION: 8.0.9
  DEFAULT_REVISION: 1

steps:
  - name: preflight
    image: python:3-alpine
    commands:
      - pip3 install semver
      - python3 genenv
  - name: docker
    depends_on:
      - preflight
    when:
      event:
        - tag
    image: docker
    environment:
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
    commands:
      - docker build -f Dockerfile.php$(tail -n1 .envs | sed "s/SHORT_VERSION=//") $(for i in $(cat .envs); do echo -n "--build-arg $i "; done) -t charlesportwoodii/php:$(head -n1 .envs | sed "s/VERSION=//")-amd64 -t charlesportwoodii/php:$(tail -n1 .envs | sed "s/SHORT_VERSION=//")-amd64 --no-cache --compress --squash .
      - docker login -u=$username -p=$password
      - docker push charlesportwoodii/php:$(head -n1 .envs | sed "s/VERSION=//")-amd64
      - docker push charlesportwoodii/php:$(tail -n1 .envs | sed "s/SHORT_VERSION=//")-amd64
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: docker-arm64

platform:
  arch: arm64

depends_on:
  - build-arm64

environment:
  DEFAULT_VERSION: 8.0.9
  DEFAULT_REVISION: 1

steps:
  - name: preflight
    image: python:3-alpine
    commands:
      - pip3 install semver
      - python3 genenv
  - name: docker
    depends_on:
      - preflight
    when:
      event:
        - tag
    image: docker
    environment:
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
    commands:
      - docker build -f Dockerfile.php$(tail -n1 .envs | sed "s/SHORT_VERSION=//") $(for i in $(cat .envs); do echo -n "--build-arg $i "; done) -t charlesportwoodii/php:$(head -n1 .envs | sed "s/VERSION=//")-arm64 -t charlesportwoodii/php:$(tail -n1 .envs | sed "s/SHORT_VERSION=//")-arm64 --no-cache --compress --squash .
      - docker login -u=$username -p=$password
      - docker push charlesportwoodii/php:$(head -n1 .envs | sed "s/VERSION=//")-arm64
      - docker push charlesportwoodii/php:$(tail -n1 .envs | sed "s/SHORT_VERSION=//")-arm64
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: docker-manifest

platform:
  arch: amd64

depends_on:
  - docker-amd64
  - docker-arm64

environment:
  DEFAULT_VERSION: 8.0.9
  DEFAULT_REVISION: 1

steps:
  - name: preflight
    image: python:3-alpine
    commands:
      - pip3 install semver
      - python3 genenv
  - name: manifest-full
    image: docker
    depends_on:
      - preflight
    when:
      event:
        - tag
        - promote
    environment:
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
    commands:
      - docker login -u=$username -p=$password
      - docker manifest create charlesportwoodii/php:$(head -n1 .envs | sed "s/VERSION=//")-arm64 --amend charlesportwoodii/php:$(head -n1 .envs | sed "s/VERSION=//")-amd64 --amend charlesportwoodii/php:$(head -n1 .envs | sed "s/VERSION=//")
      - docker manifest push charlesportwoodii/php:$(head -n1 .envs | sed "s/VERSION=//")
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock
  - name: manifest-short
    image: docker
    depends_on:
      - preflight
    when:
      event:
        - tag
        - promote
    environment:
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
    commands:
      - docker login -u=$username -p=$password
      - docker manifest create charlesportwoodii/php:$(tail -n1 .envs | sed "s/SHORT_VERSION=//")-arm64 --amend charlesportwoodii/php:$(tail -n1 .envs | sed "s/SHORT_VERSION=//")-amd64 --amend charlesportwoodii/php:$(tail -n1 .envs | sed "s/SHORT_VERSION=//")
      - docker manifest push charlesportwoodii/php:$(head -n1 .envs | sed "s/VERSION=//")
    volumes:
      - name: docker_sock
        path: /var/run/docker.sock

volumes:
  - name: docker_sock
    host:
      path: /var/run/docker.sock
