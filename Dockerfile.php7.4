FROM charlesportwoodii/alpine:3.11-base
LABEL reference="https://github.com/charlesportwoodii/docker-images"
LABEL repository="https://github.com/charlesportwoodii/php-fpm-build"
LABEL maintainer="Charles R. Portwood II <charlesportwoodii@erianna.com>"
LABEL description="An PHP 7.4 Docker image with XDebug, Composer, Libsodium, Argon2, and other common extensions pre-installed"

ENV XDEBUG_VERSION 3.0.4
ENV PHP_VERSION 7.4

ENV COMPOSER_ALLOW_SUPERUSER 1
ENV COMPOSER_NO_INTERACTION 1
ENV COMPOSER_VERSION 2.1.5
ENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1

RUN apk update && \
    apk add --no-cache git binutils ca-certificates openssl alpine-sdk linux-headers make automake gcc g++ autoconf libzip libffi libintl || true 2>/dev/null

RUN apk add --no-cache php7.4-common php7.4-fpm php7.4-bz2 php7.4-dev php7.4-gd php7.4-gmp php7.4-intl php7.4-ldap php7.4-mbstring php7.4-mysql php7.4-opcache php7.4-pgsql php7.4-pspell php7.4-redis php7.4-soap php7.4-sodium php7.4-sqlite3 php7.4-xml php7.4-xsl php7.4-igbinary | true 2>/dev/null && \
    rm -rf /etc/php/${PHP_VERSION}/mods-available/mods-available && \
    mkdir -p /etc/php/${PHP_VERSION}/conf.d /etc/php/${PHP_VERSION}/php-fpm.d /etc/php/${PHP_VERSION}/mods-available /var/run/php/ /var/log/php/ && \
    for i in $(ls /etc/php/${PHP_VERSION}/mods-available); do ln -s /etc/php/${PHP_VERSION}/mods-available/$i /etc/php/${PHP_VERSION}/conf.d/$i; done && \
    rm -rf /var/cache/apk/* && \
    ln -s /usr/bin/phpize${PHP_VERSION} /usr/bin/phpize && \
    ln -s /usr/bin/php-config${PHP_VERSION} /usr/bin/php-config && \
    ln -s /usr/bin/php${PHP_VERSION} /usr/bin/php && \
    strip --strip-all /usr/bin/php && \
    strip --strip-all /usr/sbin/php-fpm7.4

COPY ./conf/etc/php/${PHP_VERSION}/php-fpm.d/pool.conf /etc/php/${PHP_VERSION}/php-fpm.d/pool.conf
COPY ./conf/etc/php/${PHP_VERSION}/php-fpm.conf /etc/php/${PHP_VERSION}/php-fpm.conf

RUN cd /tmp && \
    wget https://xdebug.org/files/xdebug-${XDEBUG_VERSION}.tgz && \
    tar -xf xdebug-${XDEBUG_VERSION}.tgz && \
    cd xdebug-${XDEBUG_VERSION} && \
    phpize && \
    ./configure && make install && \
    echo "zend_extension=xdebug.so" | tee /etc/php/${PHP_VERSION}/conf.d/xdebug.ini && \
    echo "xdebug.remote_enable=1" | tee -a  /etc/php/${PHP_VERSION}/conf.d/xdebug.ini && \
    echo "xdebug.remote_autostart=1" | tee -a /etc/php/${PHP_VERSION}/conf.d/xdebug.ini && \
    rm -rf /tmp/xdebug-*

RUN echo "export PATH=\"\$PATH:\$HOME/.bin\"" >> /root/.bashrc && \
    mkdir -p /root/.bin && \
    chown -R root:root /root/.bin && \
    curl -qqsL https://github.com/composer/composer/releases/download/${COMPOSER_VERSION}/composer.phar -o /root/.bin/composer && \
    chmod a+x /root/.bin/composer && \
    chown -R root:root /root/.bin/composer && \
    /root/.bin/composer self-update

RUN apk del alpine-sdk linux-headers make automake gcc g++ autoconf binutils && \
    rm -rf /var/cache/apk/*

# Ensure pdo_mysql is installed
RUN grep -qF "extension=pdo_mysql.so" "/etc/php/${PHP_VERSION}/conf.d/mysql.ini" || echo "extension=pdo_mysql.so" >> "/etc/php/${PHP_VERSION}/conf.d/mysql.ini"

# Define mountable directories.
VOLUME ["/etc/php/7.4/", "/var/www"]

# Define working directory.
WORKDIR /etc/php/7.4

EXPOSE 9074

ENTRYPOINT ["/usr/sbin/php-fpm7.4", "-R", "--fpm-config", "/etc/php/7.4/php-fpm.conf"]

